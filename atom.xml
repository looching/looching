<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MarkDown</title>
  <subtitle>「靡不有初，鲜克有终」</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.tunpok.com/"/>
  <updated>2016-05-04T05:51:38.000Z</updated>
  <id>http://blog.tunpok.com/</id>
  
  <author>
    <name>Ching</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tastypie</title>
    <link href="http://blog.tunpok.com/2016/05/04/Tastypie/"/>
    <id>http://blog.tunpok.com/2016/05/04/Tastypie/</id>
    <published>2016-05-04T04:02:00.000Z</published>
    <updated>2016-05-04T05:51:38.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Resourcesin_Tastypie&quot;&gt;&lt;a href=&quot;#Resourcesin_Tastypie&quot; class=&quot;headerlink&quot; title=&quot;Resourcesin Tastypie&quot;&gt;&lt;/a&gt;Resourcesin Tastypie&lt;/h4&gt;&lt;p&gt;Resources are the heart of Tastypie. By defining a resource we can actually convert a model into an API stream. The data is automatically converted into API response.&lt;/p&gt;
&lt;p&gt;Understanding the process of creating a resource.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Import ModelResource from Tastypie.&lt;/li&gt;
&lt;li&gt;Import models from services app&lt;/li&gt;
&lt;li&gt;Create custom resource by inheriting ModelResource and link app model in inner Meta class of resource. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Add API URL in the urls.py of app.&lt;/p&gt;
&lt;h4 id=&quot;Dehydrating_the_JSON_data&quot;&gt;&lt;a href=&quot;#Dehydrating_the_JSON_data&quot; class=&quot;headerlink&quot; title=&quot;Dehydrating the JSON data&quot;&gt;&lt;/a&gt;Dehydrating the JSON data&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://impythonist.files.wordpress.com/2016/04/tastypie_ill.png?w=1000&quot; alt=&quot;flow&quot;&gt;&lt;/p&gt;
&lt;p&gt;Dehydration in Tastypie means making alterations before sending data to the client. Suppose we need to send capitalized product names instead of small letters. Now we see two kinds of dehydrate methods.&lt;/p&gt;
&lt;h5 id=&quot;Dehydrate_field_method&quot;&gt;&lt;a href=&quot;#Dehydrate_field_method&quot; class=&quot;headerlink&quot; title=&quot;Dehydrate_field method&quot;&gt;&lt;/a&gt;Dehydrate_field method&lt;/h5&gt;&lt;p&gt;This &lt;code&gt;dehydrate_field&lt;/code&gt; is uesd to modify field on the response JSON. &lt;/p&gt;
&lt;h5 id=&quot;Dehydrate_method&quot;&gt;&lt;a href=&quot;#Dehydrate_method&quot; class=&quot;headerlink&quot; title=&quot;Dehydrate method&quot;&gt;&lt;/a&gt;Dehydrate method&lt;/h5&gt;&lt;p&gt;Dehydrate method is useful for aadding additional fields to bundle (response data). &lt;/p&gt;
&lt;p&gt;Similarly using &lt;code&gt;hydrate&lt;/code&gt; method we can alter the bundle data which is generated from request at the time of PUT or POST methods.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Resourcesin_Tastypie&quot;&gt;&lt;a href=&quot;#Resourcesin_Tastypie&quot; class=&quot;headerlink&quot; title=&quot;Resourcesin Tastypie&quot;&gt;&lt;/a&gt;Resourcesin Tastypie&lt;/h4&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Django Manager Method</title>
    <link href="http://blog.tunpok.com/2016/04/25/Django-Manager-Method/"/>
    <id>http://blog.tunpok.com/2016/04/25/Django-Manager-Method/</id>
    <published>2016-04-24T16:00:01.000Z</published>
    <updated>2016-04-24T16:20:09.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Django_Manager&quot;&gt;&lt;a href=&quot;#Django_Manager&quot; class=&quot;headerlink&quot; title=&quot;Django Manager&quot;&gt;&lt;/a&gt;Django Manager&lt;/h4&gt;&lt;p&gt;Django 里会为每一个 model 生成一个 Manager，默认名字为 objects，一般情况下对 model 进行的处理都是通过 model.objects.XXX( ) 来进行的。其实是调用了 model 的 manager 的方法，而 manager 之中的方法是 QuerySet 方法的代理，QuerySet 方法是对数据库操作的封装。&lt;/p&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	people = models.Manager()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面这个 model，&lt;code&gt;Person.objects&lt;/code&gt;会产生一个&lt;code&gt;AttributeError&lt;/code&gt;，但是&lt;code&gt;Person.people&lt;/code&gt;就可以正常操作。因为默认的 manager 已经变成 people，objects 这个 manager 没有重新声明，不起作用。&lt;/p&gt;
&lt;h4 id=&quot;u81EA_u5B9A_u4E49_Manager&quot;&gt;&lt;a href=&quot;#u81EA_u5B9A_u4E49_Manager&quot; class=&quot;headerlink&quot; title=&quot;自定义 Manager&quot;&gt;&lt;/a&gt;自定义 Manager&lt;/h4&gt;&lt;p&gt;通常需要自定义 manager 的情况有两点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要修改/扩展 Django 的 manager 方法&lt;/li&gt;
&lt;li&gt;需要修改返回的 QuerySet&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;u9ED8_u8BA4_Manager&quot;&gt;&lt;a href=&quot;#u9ED8_u8BA4_Manager&quot; class=&quot;headerlink&quot; title=&quot;默认 Manager&quot;&gt;&lt;/a&gt;默认 Manager&lt;/h4&gt;&lt;p&gt;如果使用自定义的 manager 需要注意的是，Django 将 model 中定义的第一个 manager 认为是默认 manager，而且 Django 框架中会用到默认 manager。&lt;/p&gt;
&lt;p&gt;笨方法是使用自定义 manager 的时候，对于 model 依然提供 objects 这个默认 manager，并放在第一个。&lt;/p&gt;
&lt;p&gt;eg.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	title = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	author = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	objects = models.Manager() &lt;span class=&quot;comment&quot;&gt;# default manager&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	custom_objects = CustomBOokManager() &lt;span class=&quot;comment&quot;&gt;# custom manager&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/sicofield/article/details/49283751&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Django_Manager&quot;&gt;&lt;a href=&quot;#Django_Manager&quot; class=&quot;headerlink&quot; title=&quot;Django Manager&quot;&gt;&lt;/a&gt;Django Manager&lt;/h4&gt;&lt;p&gt;Django 里会为每一个 model 生成
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flask Day 2</title>
    <link href="http://blog.tunpok.com/2016/02/16/Flask-Day-2/"/>
    <id>http://blog.tunpok.com/2016/02/16/Flask-Day-2/</id>
    <published>2016-02-16T14:45:06.000Z</published>
    <updated>2016-04-24T16:18:51.000Z</updated>
    
    <content type="html">&lt;p&gt;To handle web forms we use &lt;a href=&quot;http://packages.python.org/Flask-WTF&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flask-WTF    &lt;/a&gt;. So we need to write a config file (file &lt;code&gt;config.py&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WTF_CSRF_ENABLED = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SECRET_KEY = &lt;span class=&quot;string&quot;&gt;&#39;you-will-never-guess&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And then you need to use this config (file &lt;code&gt;app/__init__.py&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Flask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.config.from_object(&lt;span class=&quot;string&quot;&gt;&#39;config&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; app &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; views&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Let’s build a simple form (file &lt;code&gt;app/forms.app&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; flask.ext.wtf &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Form&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; wtforms &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; StringField, BooleanField&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; wtforms.validators &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; DataRequired&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LoginForm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Form)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    openid = StringField(&lt;span class=&quot;string&quot;&gt;&#39;openid&#39;&lt;/span&gt;, validators=[DataRequired()])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remember_me = BooleanField(&lt;span class=&quot;string&quot;&gt;&#39;remember_me&#39;&lt;/span&gt;, default=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The &lt;code&gt;DataRequired()&lt;/code&gt; is a validator that checks the field is empty or not.&lt;/p&gt;
&lt;p&gt;After that, we need a HTML page to show the form (file &lt;code&gt;app/templates/login.html&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- extend from base layout --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% extends &quot;base.html&quot; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% block content %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Sign In&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;login&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&amp;#123; form.hidden_tag() &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Please enter your OpenID:&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;&amp;#123; form.openid(size=80) &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; form.remember_me &amp;#125;&amp;#125; Remember Me&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;Sign In&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblock %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The final step is to code a view function that renders the template and receiving data from form (file &lt;code&gt;app/views.py&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; render_template, flash, redirect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; app &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; .forms &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; LoginForm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# index view function suppressed for brevity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.route(&lt;span class=&quot;string&quot;&gt;&#39;/login&#39;&lt;/span&gt;, methods=[&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    form = LoginForm()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; form.validate_on_submit():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flash(&lt;span class=&quot;string&quot;&gt;&#39;Login requested for OpenID=&quot;%s&quot;, remember_me=%s&#39;&lt;/span&gt; %&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (form.openid.data, str(form.remember_me.data)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(&lt;span class=&quot;string&quot;&gt;&#39;/index&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;login.html&#39;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           title=&lt;span class=&quot;string&quot;&gt;&#39;Sign In&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           form=form)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;To handle web forms we use &lt;a href=&quot;http://packages.python.org/Flask-WTF&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flask-WTF    &lt;/a&gt;. So we need to
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flask Day 1</title>
    <link href="http://blog.tunpok.com/2016/02/15/Flask-Day-1/"/>
    <id>http://blog.tunpok.com/2016/02/15/Flask-Day-1/</id>
    <published>2016-02-14T17:23:33.000Z</published>
    <updated>2016-04-24T16:18:09.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u201CHello_World_u201D_in_Flask&quot;&gt;&lt;a href=&quot;#u201CHello_World_u201D_in_Flask&quot; class=&quot;headerlink&quot; title=&quot;“Hello World” in Flask&quot;&gt;&lt;/a&gt;“Hello World” in Flask&lt;/h3&gt;&lt;p&gt;Create a folder named &lt;code&gt;microblog&lt;/code&gt; (or whatever you want). Then cd into that folder and run following prompt in terminal:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ python3 -m venv flask&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now you’ll have a folder named &lt;code&gt;flask&lt;/code&gt; inside &lt;code&gt;microblog&lt;/code&gt;, containing a private version of Python interpreter.&lt;/p&gt;
&lt;p&gt;And you should install &lt;strong&gt;flask&lt;/strong&gt; and extensions by the commands below:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask-login&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask-openid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask-mail&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask-sqlalchemy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install sqlalchemy-migrate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask-whooshalchemy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask-wtf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flask-babel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install guess_language&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install flipflop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask/bin/pip install coverage&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;After that, let’s create the basic structure for our application: &lt;code&gt;app&lt;/code&gt; &lt;code&gt;app/static&lt;/code&gt; &lt;code&gt;app/templates&lt;/code&gt; &lt;code&gt;tmp&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;app&lt;/code&gt; — where the application package is&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt; — stores static files like images, javascripts, and css.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;templates&lt;/code&gt; — where templates will go.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then you can start with &lt;code&gt;__init__.py&lt;/code&gt;  which should put into app folder (file &lt;code&gt;app/__init__.py&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Flask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; app &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; views&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The views are the handlers that response to requests from web browsers or other clients. Each view function is mapped to one or more request URLs.&lt;/p&gt;
&lt;p&gt;Let’s see what a views function looks like (file &lt;code&gt;app/views.py&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Flask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; app &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; views&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Finally we should create a script to starts up the web server with our application(file &lt;code&gt;run.py&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!flask/bin/python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; app &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.run(debug=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To indicating that is an executable file you need to run this in terminal:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ chmod a+x run.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now the file structure should look like:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;microblog\&amp;#10;     flask\&amp;#10;       &amp;#60;virtual environment files&amp;#62;&amp;#10;     app\&amp;#10;       static\&amp;#10;       templates\&amp;#10;       __init__.py&amp;#10;       views.py&amp;#10;     tmp\&amp;#10;     run.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Then start to write the template (file &lt;code&gt;app/templates/index.html&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; title &amp;#125;&amp;#125; - microblog&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, &amp;#123;&amp;#123; user.nickname &amp;#125;&amp;#125;!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now let’s write the view function that uses this template (file &lt;code&gt;app/views.py&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; render_template&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; app &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;decorator&quot;&gt;@app.route(&#39;/&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;decorator&quot;&gt;@app.route(&#39;/index&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;nickname&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;ching&#39;&lt;/span&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;# fake user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           title=&lt;span class=&quot;string&quot;&gt;&#39;Home&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           user=user)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;render_template&lt;/code&gt; function is what we import from Flask framework to render the template. It uses &lt;a href=&quot;http://jinja.pocoo.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jinja2&lt;/a&gt; templating engine.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u201CHello_World_u201D_in_Flask&quot;&gt;&lt;a href=&quot;#u201CHello_World_u201D_in_Flask&quot; class=&quot;headerlink&quot; title=&quot;“Hello World” in Flask&quot;&gt;&lt;/a&gt;“H
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>First Post</title>
    <link href="http://blog.tunpok.com/2016/02/12/first-post/"/>
    <id>http://blog.tunpok.com/2016/02/12/first-post/</id>
    <published>2016-02-12T10:00:00.000Z</published>
    <updated>2016-04-24T16:17:25.000Z</updated>
    
    <content type="html">&lt;p&gt;This is the very first post I wrote,&lt;/p&gt;
&lt;p&gt;with &lt;a href=&quot;https://www.typora.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Typora&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This is the very first post I wrote,&lt;/p&gt;
&lt;p&gt;with &lt;a href=&quot;https://www.typora.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Typora&lt;/a&gt; &amp;amp; &lt;a href
    
    </summary>
    
    
  </entry>
  
</feed>
